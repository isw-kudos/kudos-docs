all:
  # Define all your hosts here
  hosts:
    gateway:
      ansible_host: external_gateway_ip
    nfs_server:
      ansible_host: external_gateway_ip
      internal_ip: internal_gateway_ip
    manager1:
      ansible_host: external_mgr1_ip
      internal_ip: internal_mgr1_ip
    manager2:
      ansible_host: external_mgr2_ip
      internal_ip: internal_mgr2_ip
    manager3:
      ansible_host: external_mgr3_ip
      internal_ip: internal_mgr3_ip
    # worker1:
    #   ansible_host: 
    #   internal_ip: 

  vars:
    # Changes required
    ansible_user: user
    ansible_ssh_private_key_file: key_file
    swarm_ip_mask: ip_mask
    # Names of ssl cert files as placed in `../roles/docker-swarm/files/ssl`
    # The names for .crt and .key files should match
    ssl_certs:
      - isw
      - kudosboards

    dashboard_host: swarm.isw.net.au
    proxy_dashboard_host: proxy.swarm.isw.net.au
    # logging:
    # host: logging.swarm.isw.net.au
    # user: admin
    # pass: password

    # Changes not required
    monitoring:
      ADMIN_USER: admin
      ADMIN_PASSWORD: password
      GF_SERVER_ROOT_URL: localhost
      GF_SMTP_ENABLED: false
      GF_SMTP_FROM_ADDRESS: grafana@test.com
      GF_SMTP_FROM_NAME: Grafana
      GF_SMTP_HOST: smtp:25
      GF_SMTP_USER:
      GF_SMTP_PASSWORD:
      DOMAIN: swarm.isw.net.au
      TRAEFIK_PUBLIC_TAG: traefik-public
      SLACK_URL: slack_hook_url
      SLACK_CHANNEL: slack_channel
      SLACK_USER: slack_user
      MONGO: false
      MONGODB_URL: mongodb://mongo:27017
    deploy_stacks:
      - proxy
      - portainer
      - mongo
      - minio
      # - monitoring
      # - logging
    mongo_replicaset: true
    nfs:
      src_fstype: nfs
      src_dir: /data/nfs
      target_dir: /data/nfs
      folders:
        - sslcerts
        - portainer
        - minio
        - mongo
        - elasticsearch
        - logstash
    ssl: true
    redirect_to_https: true
    primary_manager: manager1

  # Groups
  children:
    # Add any coreos hosts to this group
    # They will get pypy installed at the python_interpreter location below
    # Non coreos nodes will still work but they will be expected to have
    # python and docker installed in a standard manner
    coreos:
      hosts:
        manager1:
        manager2:
        manager3:
        # worker1:
      vars:
        ansible_python_interpreter: /opt/bin/python

    # Swarm managers group
    managers:
      hosts:
        manager1:
        manager2:
        manager3:
    # Swarm workers group
    # Do not add managers here also
    # workers:
    #   hosts:
    #     worker1:
